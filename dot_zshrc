# .zshrc

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH


# Literally copy and paste from bashrc
export PATH=$HOME/Downloads/Installers/interactively/bin/:$PATH:/usr/local/go/bin:$HOME/go/bin:/usr/local/Postman\ Agent/:$HOME/.local/lua-language-server/bin:$HOME/android-studio/bin
# Flutter executables
export PATH="$HOME/development/flutter/bin:$PATH"


# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="bira"
ZSH_THEME="fino"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
 COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git tmux)

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#

# Custom Aliases and secrets

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r $HOME/.dircolors && eval "$(dircolors -b $HOME/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alh'
alias la='ls -A'
alias l='ls -CF'

# Custom fucntions

frg () {
    rm -f /tmp/rg-fzf-{r,f}
    RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case "
    INITIAL_QUERY="${*:-}"
    fzf --ansi --disabled --query "$INITIAL_QUERY" \
        --bind "start:reload:$RG_PREFIX {q}" \
        --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
        --bind 'ctrl-t:transform:[[ ! $FZF_PROMPT =~ ripgrep ]] &&
          echo "rebind(change)+change-prompt(1. ripgrep> )+disable-search+transform-query:echo \{q} > /tmp/rg-fzf-f; cat /tmp/rg-fzf-r" ||
          echo "unbind(change)+change-prompt(2. fzf> )+enable-search+transform-query:echo \{q} > /tmp/rg-fzf-r; cat /tmp/rg-fzf-f"' \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --prompt '1. ripgrep> ' \
        --delimiter : \
        --header 'CTRL-T: Switch between ripgrep/fzf' \
        --preview 'bat --color=always {1} --highlight-line {2}' \
        --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
        --bind 'enter:become(nvim {1} +{2})'
}
fgc () {
    git checkout \
        $(
            (
                git branch -a -vv --color=always;
                pgl;
            ) |
            fzf --ansi --reverse --cycle --preview="git show --color=always \$(echo {} | awk '{print \$1}')" |
            awk '{print $1}' |
            sed 's/\*//'
        )
}
fgbc () {
    git checkout \
        $(
            git branch -a -vv --color=always |
            fzf --ansi --reverse --cycle --preview="git show --color=always \$(echo {} | awk '{print \$1}')" |
            awk '{print $1}' |
            sed 's/\*//'
        )
}
fgcc () {
    git checkout \
        $(
            pggl |
            fzf --ansi --reverse --cycle --preview="git show --color=always \$(echo {} | sed -E 's/[^a-f0-9]*([a-f0-9]+).*/\1/')" |
            sed -E 's/[^a-f0-9]*([a-f0-9]+).*/\1/'
        )
}

fs () { interactively 'sed -e {} '$1''; }
fg () { interactively 'grep --color=always {} '$1''; }

screenshot () {
    local filename="$HOME/Pictures/Screenshots/Screenshot_$(date +%Y-%m-%d-%H-%M-%S).png"
    grimshot savecopy anything "$filename"
    notify-send "Screenshot saved to clipboard and $filename"
}

swap_sway_wksp () {
    local wksp=$(swaymsg -rt get_workspaces | jq -r '.[] | select(.focused == true).num')
    local query="string join '' '.. | select(.type?) | select(.num == ' $1 ') | .output'"
    local output=$(swaymsg -rt get_outputs | jq -r $query)

    swaymsg [workspace = $1] move workspace to output current
    swaymsg [workspace = $wksp] move workspace to output $output
    swaymsg workspace number $1
}

get_file () {
    if [[ ! -d "$HOME/remote_device_files" ]]; then
        mkdir -p $HOME/remote_device_files
    fi

    if [[ "$1" != "sftp" && "$1" != "scp" ]]; then
            echo "Only scp and sftp are supported. Please use one of these as the first argument to this function"
            return 1
    fi

    "$1" bgorgani@"$2":"$3" "$HOME"/remote_device_files/

}

performance () {
    echo performance | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
}

# Custom exports

export EDITOR=nvim
export VISUAL=nvim
export SUDO_EDITOR=nvim
export BAT_THEME="OneHalfDark"
export XCURSOR_THEME="material_cursors"
export XCURSOR_SIZE="32"
export XDG_DATA_DIRS="/var/lib/flatpak/exports/share:/home/baky/.local/share/flatpak/exports/share:$XDG_DATA_DIRS"

export FZF_DEFAULT_OPTS="
    --tmux 97%
    --walker-skip .steam,.git,node_modules,target,.cache,.gradle,venv,.cache,sys,proc,.file,.npm,.dartserver,.mypy_cache,HedgeModManager,dosdevices
    --cycle
    --border
"
export FZF_ALT_C_OPTS="
    $FZF_DEFAULT_OPTS
    --preview 'tree -C {}'
"

 # Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

# Copilot functions
eval "$(gh copilot alias -- zsh)"

# Oh My Posh
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/night-owl.omp.json)"
